{"version":3,"file":"tom-select.popular.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/tom-select.popular.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const arrayToPattern = (chars) => {\n    chars = chars.filter(Boolean);\n    if (chars.length < 2) {\n        return chars[0] || '';\n    }\n    return (maxValueLength(chars) == 1) ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\nexport const sequencePattern = (array) => {\n    if (!hasDuplicates(array)) {\n        return array.join('');\n    }\n    let pattern = '';\n    let prev_char_count = 0;\n    const prev_pattern = () => {\n        if (prev_char_count > 1) {\n            pattern += '{' + prev_char_count + '}';\n        }\n    };\n    array.forEach((char, i) => {\n        if (char === array[i - 1]) {\n            prev_char_count++;\n            return;\n        }\n        prev_pattern();\n        pattern += char;\n        prev_char_count = 1;\n    });\n    prev_pattern();\n    return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n */\nexport const setToPattern = (chars) => {\n    let array = Array.from(chars);\n    return arrayToPattern(array);\n};\n/**\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n */\nexport const hasDuplicates = (array) => {\n    return (new Set(array)).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str) => {\n    return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n */\nexport const maxValueLength = (array) => {\n    return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\nexport const unicodeLength = (str) => {\n    return Array.from(str).length;\n};\n//# sourceMappingURL=regex.js.map","/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n */\nexport const allSubstrings = (input) => {\n    if (input.length === 1)\n        return [[input]];\n    let result = [];\n    const start = input.substring(1);\n    const suba = allSubstrings(start);\n    suba.forEach(function (subresult) {\n        let tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    return result;\n};\n//# sourceMappingURL=strings.js.map","import { setToPattern, arrayToPattern, escape_regex, sequencePattern } from \"./regex.js\";\nimport { allSubstrings } from \"./strings.js\";\nexport const code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\nexport let unicode_map;\nlet multi_char_reg;\nconst max_char_length = 3;\nconst latin_convert = {};\nconst latin_condensed = {\n    '/': '⁄∕',\n    '0': '߀',\n    \"a\": \"ⱥɐɑ\",\n    \"aa\": \"ꜳ\",\n    \"ae\": \"æǽǣ\",\n    \"ao\": \"ꜵ\",\n    \"au\": \"ꜷ\",\n    \"av\": \"ꜹꜻ\",\n    \"ay\": \"ꜽ\",\n    \"b\": \"ƀɓƃ\",\n    \"c\": \"ꜿƈȼↄ\",\n    \"d\": \"đɗɖᴅƌꮷԁɦ\",\n    \"e\": \"ɛǝᴇɇ\",\n    \"f\": \"ꝼƒ\",\n    \"g\": \"ǥɠꞡᵹꝿɢ\",\n    \"h\": \"ħⱨⱶɥ\",\n    \"i\": \"ɨı\",\n    \"j\": \"ɉȷ\",\n    \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n    \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n    \"m\": \"ɱɯϻ\",\n    \"n\": \"ꞥƞɲꞑᴎлԉ\",\n    \"o\": \"øǿɔɵꝋꝍᴑ\",\n    \"oe\": \"œ\",\n    \"oi\": \"ƣ\",\n    \"oo\": \"ꝏ\",\n    \"ou\": \"ȣ\",\n    \"p\": \"ƥᵽꝑꝓꝕρ\",\n    \"q\": \"ꝗꝙɋ\",\n    \"r\": \"ɍɽꝛꞧꞃ\",\n    \"s\": \"ßȿꞩꞅʂ\",\n    \"t\": \"ŧƭʈⱦꞇ\",\n    \"th\": \"þ\",\n    \"tz\": \"ꜩ\",\n    \"u\": \"ʉ\",\n    \"v\": \"ʋꝟʌ\",\n    \"vy\": \"ꝡ\",\n    \"w\": \"ⱳ\",\n    \"y\": \"ƴɏỿ\",\n    \"z\": \"ƶȥɀⱬꝣ\",\n    \"hv\": \"ƕ\"\n};\nfor (let latin in latin_condensed) {\n    let unicode = latin_condensed[latin] || '';\n    for (let i = 0; i < unicode.length; i++) {\n        let char = unicode.substring(i, i + 1);\n        latin_convert[char] = latin;\n    }\n}\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n */\nexport const initialize = (_code_points) => {\n    if (unicode_map !== undefined)\n        return;\n    unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nexport const normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n */\nexport const asciifold = (str) => {\n    return Array.from(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n        return result + _asciifold(char);\n    }, '');\n};\nexport const _asciifold = (str) => {\n    str = normalize(str)\n        .toLowerCase()\n        .replace(convert_pat, (/** @type {string} */ char) => {\n        return latin_convert[char] || '';\n    });\n    //return str;\n    return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n */\nexport function* generator(code_points) {\n    for (const [code_point_min, code_point_max] of code_points) {\n        for (let i = code_point_min; i <= code_point_max; i++) {\n            let composed = String.fromCharCode(i);\n            let folded = asciifold(composed);\n            if (folded == composed.toLowerCase()) {\n                continue;\n            }\n            // skip when folded is a string longer than 3 characters long\n            // bc the resulting regex patterns will be long\n            // eg:\n            // folded صلى الله عليه وسلم length 18 code point 65018\n            // folded جل جلاله length 8 code point 65019\n            if (folded.length > max_char_length) {\n                continue;\n            }\n            if (folded.length == 0) {\n                continue;\n            }\n            yield { folded: folded, composed: composed, code_point: i };\n        }\n    }\n}\n/**\n * Generate a unicode map from the list of code points\n */\nexport const generateSets = (code_points) => {\n    const unicode_sets = {};\n    const addMatching = (folded, to_add) => {\n        /** @type {Set<string>} */\n        const folded_set = unicode_sets[folded] || new Set();\n        const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n        if (to_add.match(patt)) {\n            return;\n        }\n        folded_set.add(escape_regex(to_add));\n        unicode_sets[folded] = folded_set;\n    };\n    for (let value of generator(code_points)) {\n        addMatching(value.folded, value.folded);\n        addMatching(value.folded, value.composed);\n    }\n    return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n */\nexport const generateMap = (code_points) => {\n    const unicode_sets = generateSets(code_points);\n    const unicode_map = {};\n    let multi_char = [];\n    for (let folded in unicode_sets) {\n        let set = unicode_sets[folded];\n        if (set) {\n            unicode_map[folded] = setToPattern(set);\n        }\n        if (folded.length > 1) {\n            multi_char.push(escape_regex(folded));\n        }\n    }\n    multi_char.sort((a, b) => b.length - a.length);\n    const multi_char_patt = arrayToPattern(multi_char);\n    multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n    return unicode_map;\n};\n/**\n * Map each element of an array from its folded value to all possible unicode matches\n */\nexport const mapSequence = (strings, min_replacement = 1) => {\n    let chars_replaced = 0;\n    strings = strings.map((str) => {\n        if (unicode_map[str]) {\n            chars_replaced += str.length;\n        }\n        return unicode_map[str] || str;\n    });\n    if (chars_replaced >= min_replacement) {\n        return sequencePattern(strings);\n    }\n    return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n */\nexport const substringsToPattern = (str, min_replacement = 1) => {\n    min_replacement = Math.max(min_replacement, str.length - 1);\n    return arrayToPattern(allSubstrings(str).map((sub_pat) => {\n        return mapSequence(sub_pat, min_replacement);\n    }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n */\nconst sequencesToPattern = (sequences, all = true) => {\n    let min_replacement = sequences.length > 1 ? 1 : 0;\n    return arrayToPattern(sequences.map((sequence) => {\n        let seq = [];\n        const len = all ? sequence.length() : sequence.length() - 1;\n        for (let j = 0; j < len; j++) {\n            seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n        }\n        return sequencePattern(seq);\n    }));\n};\n/**\n * Return true if the sequence is already in the sequences\n */\nconst inSequences = (needle_seq, sequences) => {\n    for (const seq of sequences) {\n        if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n            continue;\n        }\n        if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n            continue;\n        }\n        let needle_parts = needle_seq.parts;\n        const filter = (part) => {\n            for (const needle_part of needle_parts) {\n                if (needle_part.start === part.start && needle_part.substr === part.substr) {\n                    return false;\n                }\n                if (part.length == 1 || needle_part.length == 1) {\n                    continue;\n                }\n                // check for overlapping parts\n                // a = ['::=','==']\n                // b = ['::','===']\n                // a = ['r','sm']\n                // b = ['rs','m']\n                if (part.start < needle_part.start && part.end > needle_part.start) {\n                    return true;\n                }\n                if (needle_part.start < part.start && needle_part.end > part.start) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        let filtered = seq.parts.filter(filter);\n        if (filtered.length > 0) {\n            continue;\n        }\n        return true;\n    }\n    return false;\n};\nclass Sequence {\n    parts;\n    substrs;\n    start;\n    end;\n    constructor() {\n        this.parts = [];\n        this.substrs = [];\n        this.start = 0;\n        this.end = 0;\n    }\n    add(part) {\n        if (part) {\n            this.parts.push(part);\n            this.substrs.push(part.substr);\n            this.start = Math.min(part.start, this.start);\n            this.end = Math.max(part.end, this.end);\n        }\n    }\n    last() {\n        return this.parts[this.parts.length - 1];\n    }\n    length() {\n        return this.parts.length;\n    }\n    clone(position, last_piece) {\n        let clone = new Sequence();\n        let parts = JSON.parse(JSON.stringify(this.parts));\n        let last_part = parts.pop();\n        for (const part of parts) {\n            clone.add(part);\n        }\n        let last_substr = last_piece.substr.substring(0, position - last_part.start);\n        let clone_last_len = last_substr.length;\n        clone.add({ start: last_part.start, end: last_part.start + clone_last_len, length: clone_last_len, substr: last_substr });\n        return clone;\n    }\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n */\nexport const getPattern = (str) => {\n    initialize();\n    str = asciifold(str);\n    let pattern = '';\n    let sequences = [new Sequence()];\n    for (let i = 0; i < str.length; i++) {\n        let substr = str.substring(i);\n        let match = substr.match(multi_char_reg);\n        const char = str.substring(i, i + 1);\n        const match_str = match ? match[0] : null;\n        // loop through sequences\n        // add either the char or multi_match\n        let overlapping = [];\n        let added_types = new Set();\n        for (const sequence of sequences) {\n            const last_piece = sequence.last();\n            if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n                // if we have a multi match\n                if (match_str) {\n                    const len = match_str.length;\n                    sequence.add({ start: i, end: i + len, length: len, substr: match_str });\n                    added_types.add('1');\n                }\n                else {\n                    sequence.add({ start: i, end: i + 1, length: 1, substr: char });\n                    added_types.add('2');\n                }\n            }\n            else if (match_str) {\n                let clone = sequence.clone(i, last_piece);\n                const len = match_str.length;\n                clone.add({ start: i, end: i + len, length: len, substr: match_str });\n                overlapping.push(clone);\n            }\n            else {\n                // don't add char\n                // adding would create invalid patterns: 234 => [2,34,4]\n                added_types.add('3');\n            }\n        }\n        // if we have overlapping\n        if (overlapping.length > 0) {\n            // ['ii','iii'] before ['i','i','iii']\n            overlapping = overlapping.sort((a, b) => {\n                return a.length() - b.length();\n            });\n            for (let clone of overlapping) {\n                // don't add if we already have an equivalent sequence\n                if (inSequences(clone, sequences)) {\n                    continue;\n                }\n                sequences.push(clone);\n            }\n            continue;\n        }\n        // if we haven't done anything unique\n        // clean up the patterns\n        // helps keep patterns smaller\n        // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n        if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n            pattern += sequencesToPattern(sequences, false);\n            let new_seq = new Sequence();\n            const old_seq = sequences[0];\n            if (old_seq) {\n                new_seq.add(old_seq.last());\n            }\n            sequences = [new_seq];\n        }\n    }\n    pattern += sequencesToPattern(sequences, true);\n    return pattern;\n};\nexport { escape_regex };\n//# sourceMappingURL=index.js.map","import { asciifold } from '@orchidjs/unicode-variants';\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj, name) => {\n    if (!obj)\n        return;\n    return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj, name) => {\n    if (!obj)\n        return;\n    var part, names = name.split(\".\");\n    while ((part = names.shift()) && (obj = obj[part]))\n        ;\n    return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value, token, weight) => {\n    var score, pos;\n    if (!value)\n        return 0;\n    value = value + '';\n    if (token.regex == null)\n        return 0;\n    pos = value.search(token.regex);\n    if (pos === -1)\n        return 0;\n    score = token.string.length / value.length;\n    if (pos === 0)\n        score += 0.5;\n    return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj, key) => {\n    var value = obj[key];\n    if (typeof value == 'function')\n        return value;\n    if (value && !Array.isArray(value)) {\n        obj[key] = [value];\n    }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n        object.forEach(callback);\n    }\n    else {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                callback(object[key], key);\n            }\n        }\n    }\n};\nexport const cmp = (a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n        return a > b ? 1 : (a < b ? -1 : 0);\n    }\n    a = asciifold(a + '').toLowerCase();\n    b = asciifold(b + '').toLowerCase();\n    if (a > b)\n        return 1;\n    if (b > a)\n        return -1;\n    return 0;\n};\n//# sourceMappingURL=utils.js.map","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nimport { scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp } from \"./utils.js\";\nimport { getPattern, escape_regex } from '@orchidjs/unicode-variants';\nclass Sifter {\n    items; // []|{};\n    settings;\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     */\n    constructor(items, settings) {\n        this.items = items;\n        this.settings = settings || { diacritics: true };\n    }\n    ;\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     */\n    tokenize(query, respect_word_boundaries, weights) {\n        if (!query || !query.length)\n            return [];\n        const tokens = [];\n        const words = query.split(/\\s+/);\n        var field_regex;\n        if (weights) {\n            field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n        }\n        words.forEach((word) => {\n            let field_match;\n            let field = null;\n            let regex = null;\n            // look for \"field:query\" tokens\n            if (field_regex && (field_match = word.match(field_regex))) {\n                field = field_match[1];\n                word = field_match[2];\n            }\n            if (word.length > 0) {\n                if (this.settings.diacritics) {\n                    regex = getPattern(word) || null;\n                }\n                else {\n                    regex = escape_regex(word);\n                }\n                if (regex && respect_word_boundaries)\n                    regex = \"\\\\b\" + regex;\n            }\n            tokens.push({\n                string: word,\n                regex: regex ? new RegExp(regex, 'iu') : null,\n                field: field,\n            });\n        });\n        return tokens;\n    }\n    ;\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @returns {T.ScoreFn}\n     */\n    getScoreFunction(query, options) {\n        var search = this.prepareSearch(query, options);\n        return this._getScoreFunction(search);\n    }\n    /**\n     * @returns {T.ScoreFn}\n     *\n     */\n    _getScoreFunction(search) {\n        const tokens = search.tokens, token_count = tokens.length;\n        if (!token_count) {\n            return function () { return 0; };\n        }\n        const fields = search.options.fields, weights = search.weights, field_count = fields.length, getAttrFn = search.getAttrFn;\n        if (!field_count) {\n            return function () { return 1; };\n        }\n        /**\n         * Calculates the score of an object\n         * against the search query.\n         *\n         */\n        const scoreObject = (function () {\n            if (field_count === 1) {\n                return function (token, data) {\n                    const field = fields[0].field;\n                    return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n                };\n            }\n            return function (token, data) {\n                var sum = 0;\n                // is the token specific to a field?\n                if (token.field) {\n                    const value = getAttrFn(data, token.field);\n                    if (!token.regex && value) {\n                        sum += (1 / field_count);\n                    }\n                    else {\n                        sum += scoreValue(value, token, 1);\n                    }\n                }\n                else {\n                    iterate(weights, (weight, field) => {\n                        sum += scoreValue(getAttrFn(data, field), token, weight);\n                    });\n                }\n                return sum / field_count;\n            };\n        })();\n        if (token_count === 1) {\n            return function (data) {\n                return scoreObject(tokens[0], data);\n            };\n        }\n        if (search.options.conjunction === 'and') {\n            return function (data) {\n                var score, sum = 0;\n                for (let token of tokens) {\n                    score = scoreObject(token, data);\n                    if (score <= 0)\n                        return 0;\n                    sum += score;\n                }\n                return sum / token_count;\n            };\n        }\n        else {\n            return function (data) {\n                var sum = 0;\n                iterate(tokens, (token) => {\n                    sum += scoreObject(token, data);\n                });\n                return sum / token_count;\n            };\n        }\n    }\n    ;\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @return function(a,b)\n     */\n    getSortFunction(query, options) {\n        var search = this.prepareSearch(query, options);\n        return this._getSortFunction(search);\n    }\n    _getSortFunction(search) {\n        var implicit_score, sort_flds = [];\n        const self = this, options = search.options, sort = (!search.query && options.sort_empty) ? options.sort_empty : options.sort;\n        if (typeof sort == 'function') {\n            return sort.bind(this);\n        }\n        /**\n         * Fetches the specified sort field value\n         * from a search result item.\n         *\n         */\n        const get_field = function (name, result) {\n            if (name === '$score')\n                return result.score;\n            return search.getAttrFn(self.items[result.id], name);\n        };\n        // parse options\n        if (sort) {\n            for (let s of sort) {\n                if (search.query || s.field !== '$score') {\n                    sort_flds.push(s);\n                }\n            }\n        }\n        // the \"$score\" field is implied to be the primary\n        // sort field, unless it's manually specified\n        if (search.query) {\n            implicit_score = true;\n            for (let fld of sort_flds) {\n                if (fld.field === '$score') {\n                    implicit_score = false;\n                    break;\n                }\n            }\n            if (implicit_score) {\n                sort_flds.unshift({ field: '$score', direction: 'desc' });\n            }\n            // without a search.query, all items will have the same score\n        }\n        else {\n            sort_flds = sort_flds.filter((fld) => fld.field !== '$score');\n        }\n        // build function\n        const sort_flds_count = sort_flds.length;\n        if (!sort_flds_count) {\n            return null;\n        }\n        return function (a, b) {\n            var result, field;\n            for (let sort_fld of sort_flds) {\n                field = sort_fld.field;\n                let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n                result = multiplier * cmp(get_field(field, a), get_field(field, b));\n                if (result)\n                    return result;\n            }\n            return 0;\n        };\n    }\n    ;\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     */\n    prepareSearch(query, optsUser) {\n        const weights = {};\n        var options = Object.assign({}, optsUser);\n        propToArray(options, 'sort');\n        propToArray(options, 'sort_empty');\n        // convert fields to new format\n        if (options.fields) {\n            propToArray(options, 'fields');\n            const fields = [];\n            options.fields.forEach((field) => {\n                if (typeof field == 'string') {\n                    field = { field: field, weight: 1 };\n                }\n                fields.push(field);\n                weights[field.field] = ('weight' in field) ? field.weight : 1;\n            });\n            options.fields = fields;\n        }\n        return {\n            options: options,\n            query: query.toLowerCase().trim(),\n            tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n            total: 0,\n            items: [],\n            weights: weights,\n            getAttrFn: (options.nesting) ? getAttrNesting : getAttr,\n        };\n    }\n    ;\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     */\n    search(query, options) {\n        var self = this, score, search;\n        search = this.prepareSearch(query, options);\n        options = search.options;\n        query = search.query;\n        // generate result scoring function\n        const fn_score = options.score || self._getScoreFunction(search);\n        // perform search and sort\n        if (query.length) {\n            iterate(self.items, (item, id) => {\n                score = fn_score(item);\n                if (options.filter === false || score > 0) {\n                    search.items.push({ 'score': score, 'id': id });\n                }\n            });\n        }\n        else {\n            iterate(self.items, (_, id) => {\n                search.items.push({ 'score': 1, 'id': id });\n            });\n        }\n        const fn_sort = self._getSortFunction(search);\n        if (fn_sort)\n            search.items.sort(fn_sort);\n        // apply limits\n        search.total = search.items.length;\n        if (typeof options.limit === 'number') {\n            search.items = search.items.slice(0, options.limit);\n        }\n        return search;\n    }\n    ;\n}\nexport { Sifter, scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp, getPattern };\nexport * from \"./types.js\";\n//# sourceMappingURL=sifter.js.map","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import TomSelect from './tom-select';\n\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\n\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\n\nexport default TomSelect;\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","Array","from","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","latin_condensed","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","p","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","latin","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","_asciifold","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","match","add","code_point_min","code_point_max","composed","String","fromCharCode","code_point","generator","generateMap","multi_char","set","sort","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","_code_points","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","key","isArray","iterate","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","fld","direction","sort_fld","optsUser","assign","trim","total","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","init_textbox","data_raw","opt","values","instance_i","TomSelect","Interface","super","requested","loaded","define","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","swap","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","nesting","calculateScore","hashed","triggerDropdown","html","has_create_option","active_group","groups","groups_order","same_query","elements","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","group_fragment","createDocumentFragment","$id","toString","grp_a","grp_b","$order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","div","orig_onBlur","relatedTarget","preventScroll","orig_deleteSelection","title","orig_render_item","close_button","text"],"mappings":"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"}